From 7447d1102d35162d21da4a6ced0cb0499fe241e5 Mon Sep 17 00:00:00 2001
From: Timo Mueller <timo.mueller@bmw-carit.de>
Date: Thu, 2 Oct 2014 16:43:49 +0200
Subject: [PATCH] Fix overwriting of path and check_path variables

Using array_merge_recursive with a config that contains a path or a
check_path variable results in an incorrect configuration.

For example the resulting array will look like this:
array(
		...
		'check_path' => array('app_config', 'default_config),
)

This array is not accepted by opauth as the value of check_path and path
is expected to be a string value.
---
 src/SilexOpauth/Security/OpauthSilexProvider.php | 11 +++--------
 1 file changed, 3 insertions(+), 8 deletions(-)

diff --git a/src/SilexOpauth/Security/OpauthSilexProvider.php b/src/SilexOpauth/Security/OpauthSilexProvider.php
index a19e6a7..7f8065b 100644
--- a/src/SilexOpauth/Security/OpauthSilexProvider.php
+++ b/src/SilexOpauth/Security/OpauthSilexProvider.php
@@ -24,14 +24,9 @@ class OpauthSilexProvider implements ServiceProviderInterface
     {
         
         $app['security.authentication_listener.factory.opauth'] = $app->protect(function ($name, $options) use ($app) {
-            
-            $options = array_merge_recursive($options, array(
-                'check_path' => '/login/opauth',
-                'opauth' => array(
-                    'path' => '/login/',
-                )
-            ));
-            
+            $options = array_merge(array('check_path' => '/login/opauth'), $options);
+            $options['opauth'] = array_merge(array('path' => '/login/'), $options['opauth']);
+
             if (!isset($app['security.authentication.success_handler.'.$name])) {
                 $app['security.authentication.success_handler.'.$name] = $app['security.authentication.success_handler._proto']($name, $options);
             }
-- 
1.9.3

